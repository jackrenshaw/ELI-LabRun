<%- include ('partial/labHeader.ejs') %>
<style>body{
  background:#fff;
}</style>
<div class="container">
            <div class="graph-area">
              <div class="form-group" id="datapoints">
                <label for="exampleFormControlTextarea1" style="font-size:small">Comma-Seperated Data Points. First row defines X and Y Axes. Format is Label,X,Y. Functions can be graphed using the a line foDatapoints are linearly interpolated. </label>
                <textarea class="form-control" id="exampleFormControlTextarea1" rows="2">label,Time (s),Voltage (V)</textarea>
              </div>
              <div class="image-area"></div>
            </div>
            <script type="text/javascript">
              $(".graph-area textarea").keyup(function(){
                var axes = $(this).val().split("\n")[0];
                var functions = $(this).val().match(/[A-z0-9]+,f\([a-z],[0-9]+,[0-9]+(\.[0-9]+)?\) ?= ?.+/g)
                var lines = $(this).val().match(/\n([A-z0-9]+,[+-]?([0-9]*[.])?[0-9]+,[+-]?([0-9]*[.])?[0-9]+)/g);
                console.log(lines);
                console.log(axes);
                console.log(functions);
                var signals = [];
                if(functions)
                  if(functions.length) for(var f of functions){
                    var name = f.split(',')[0];
                    var v = f.split('f(')[1].split(')')[0].split(',')[0];
                    var fs = f.split('f(')[1].split(')')[0].split(',')[1];
                    var period = f.split('f(')[1].split(')')[0].split(',')[2];
                    var expression = f.split('=')[1].trim();
                    var exp = false;
                    try{
                      math.evaluate(expression.replaceAll(v,'1'))
                      exp = true
                      }catch(e){
                        console.log("error");
                        return null;
                    }
                    var signal = new Array(period*fs);
                    for(var i=0;i<signal.length;i++)
                      signal[i] = {x:i/fs,y:(0.0),c:name};
                    if(exp)
                      for(var i=0;i<signal.length;i++)
                        signal[i].y = math.evaluate(expression.replaceAll(v,signal[i].x))
                    signals = signals.concat(signal)
                  }
                console.log(signals);
                if(lines)
                  if(lines.length)
                    for(var l of lines)
                      signals.push({x:parseFloat(l.split(",")[1]),y:parseFloat(l.split(",")[2]),c:(l.split(",")[0])});
                if(signals.length && /[A-z0-9\(\) ]+(,[A-z0-9\(\) ]+){1,2}/g.test(axes))
                  $.post("/graph",{signals:signals,xlabel:axes.split(",")[1],ylabel:axes.split(",")[2]},function(data){
                    $("div.image-area").html(data);
                  })
              })
            </script>
            </div>