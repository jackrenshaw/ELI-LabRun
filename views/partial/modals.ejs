<div class="modal" id="login-modal">
  <div class="modal-background"></div>
  <div class="modal-card">
    <header class="modal-card-head">
      <p class="modal-card-title">Login to UNSW-ELI</p>
      <button class="delete" aria-label="close" onclick="$('.modal').removeClass('is-active');"></button>
    </header>
    <section class="modal-card-body">
      <form action="https://unsw-eli.herokuapp.com/auth/login" method="POST" id="login-form">
      <div class="field">
        <p class="control has-icons-left has-icons-right">
          <input class="input" type="email" placeholder="Email" name="Email">
          <span class="icon is-small is-left">
            <i class="fas fa-envelope"></i>
          </span>
          <span class="icon is-small is-right">
            <i class="fas fa-check"></i>
          </span>
        </p>
      </div>
      <div class="field">
        <p class="control has-icons-left">
          <input class="input" type="password" placeholder="Password" name="Password">
          <span class="icon is-small is-left material-icons">
              key
          </span>
        </p>
      </div>
      <p class="feedback"></p>
      <div class="field">
        <p class="control">
          <input type="hidden" name="sendToken" value="true">
          <input type="submit" value="Login" class="button is-success">
        </p>
      </div>
    </form>
    </section>
  </div>
</div>
<div class="modal" id="confirm-modal">
  <div class="modal-background"></div>
  <div class="modal-card">
    <header class="modal-card-head">
      <p class="modal-card-title">PCB Implementation Receipt</p>
      <button class="delete" aria-label="close"></button>
    </header>
    <section class="modal-card-body">
      The circuit was configured in the following way
      <table class="table is-bordered is-striped is-narrow is-hoverable is-fullwidth">
        <thead class="thead-dark">
          <tr>
            <th></th>
            <th>Digital Line 1</th>
            <th>Digital Line 2</th>
          </tr>
        </thead>
        <tbody>
        </tbody>
      </table>
    </section>
    <footer class="modal-card-foot">
    </footer>
  </div>
</div>
<div class="modal" id="SyncGlobal">
  <div class="modal-background"></div>
  <div class="modal-card">
    <header class="modal-card-head">
      <p class="modal-card-title">Sync a Cloud Circuit</p>
      <button class="delete" aria-label="close"></button>
    </header>
    <section class="modal-card-body">
      <div class="columns is-vcentered">
        <a href="" data-action="save" class="button is-info">Pull Circuit</a>
      </div>
    </section>
    <footer class="modal-card-foot">
      <button class="button is-info">Confirm</button>
    </footer>
  </div>
</div>
<div class="modal" id="VariableResistor">
  <div class="modal-background"></div>
  <div class="modal-card">
    <header class="modal-card-head">
      <p class="modal-card-title">Variable Resistor</p>
      <button class="delete" aria-label="close"></button>
    </header>
    <section class="modal-card-body">
      <label for="vresistance" class="form-label">Resistance Value</label>
      <center><h5 class="title"></h5></center>
      <input type="range" class="slider is-fullwidth" min="0" max="100" step="1" name="vresistance" value='100'>
    </section>
      <footer class="modal-card-foot">
        <button class="button is-info" onclick="SaveVariableResistance();">Close</button>
      </footer>
    </div>
</div>
<div class="modal" id="Override">
  <script type="text/javascript">
    $(document).ready(function(){
    $("#Override input[type='password']").keyup(function(){
        $("#Override button[data-action='open-pane']").attr("data-token",$(this).val());
        $("#Override button[data-action='open-pane']").removeAttr("disabled");
    })
  })
  </script>
  <div class="modal-background"></div>
  <div class="modal-card">
    <header class="modal-card-head">
      <p class="modal-card-title">Manually Implement Circuit</p>
      <button class="delete" aria-label="close"></button>
    </header>
    <section class="modal-card-body">
      <div class="field">
        <p class="control has-icons-left">
          <input class="input" type="password" placeholder="Password">
          <span class="icon is-small is-left">
            <span class="material-icons">key</span>
          </span>
        </p>
      </div>
      <div class="implement-button">
        <button data-action='open-pane' class='button is-info' data-token="" disabled>Open Control Panel</button>
      </div>
    </section>
      <footer class="modal-card-foot">
        <button class="button is-info">Close</button>
      </footer>
    </div>
</div>
<div class="modal" id="Simulation">
  <div class="modal-background"></div>
  <div class="modal-card">
    <header class="modal-card-head">
      <p class="modal-card-title">Simulation Output</p>
      <button class="delete" aria-label="close"></button>
    </header>
      <div class="modal-card-body">
        <h6>Simulation Output</h6>
        <p class="sim-result"></p>
        <p class="validation-result"></p>
        <div class="comparison-area"></div>
      </div>
      <footer class="modal-card-foot">
        <button class="button is-info">Close</button>
      </footer>
    </div>
</div>
<div class="modal" id="Source">
  <div class="modal-background"></div>
  <script type="text/javascript">
    $(document).ready(function(){
    $("#Source input[name=voltage1],#Source input[name=voltage2]").click(function(){
      console.log("Testing");
      var val = ($(this).val()).toString();
      if(!val.includes(".")) val += '.0';
      $("#Source table td[name="+$(this).attr('name')+"]").text(val+" V")
    })
  });
    </script>
     <div class="modal-card">
      <header class="modal-card-head">
        <p class="modal-card-title">Power Supply</p>
        <button class="delete" aria-label="close"></button>
      </header>
        <div class="modal-card-body">
          <table style="width: 100%;text-align: center;"><thead><tr><th>Supply 1</th><th>Supply 2</th></tr></thead><tr class="font-size:48px;"><td name="voltage1">5.0 V</td><td name="voltage2">5.0 V</td></tr></table>
          <hr/>
          <label for="voltage1" class="form-label">Voltage 1</label>
          <input type="range" class="slider is-fullwidth" min="0" max="15" step="0.1" name="voltage1" value='5.0'>
          <label for="voltage2" class="form-label">Voltage 2</label>
          <input type="range" class="slider is-fullwidth" min="0" max="15" step="0.1" name="voltage2" value='5.0'>
        </div>
        <footer class="modal-card-foot">
          <button class="button is-info">Close</button>
        </footer>
      </div>
</div>
<div class="modal" id="SignalGenerator">
  <div class="modal-background"></div>
    <script type="text/javascript">
      $(document).ready(function(){
      $("#SignalGenerator input[name=voltage],#SignalGenerator div[name='voltage-multiple'] input[type='radio']").click(function(){
        var scale = 0.1;
        var multiple = $("#SignalGenerator div[name='voltage-multiple'] input[type='radio']:checked").val()
        var val = ($("#SignalGenerator input[name=voltage]").val()*multiple).toString();
        if(!val.includes(".")) val += '.0';
        $("#SignalGenerator table td[name=voltage]").text(val+" V")
      })
      $("#SignalGenerator input[name=frequency],#SignalGenerator div[name='freq-multiple'] input[type='radio']").click(function(){
        var multiple = $("#SignalGenerator div[name='freq-multiple'] input[type='radio']:checked").val()
        var val = $("#SignalGenerator input[name=frequency]").val()*multiple;
        if(val >1e6) val = val/1e6 + " MHz"
        else if(val > 1e3) val = val/1e3 +" kHz"
        else val = val + " Hz"
        $("#SignalGenerator table td[name=frequency]").text(val)
      })
      $("#SignalGenerator .type a").click(function(){
        $(this).parent().parent().parent().find("a").removeClass("is-info").addClass("is-white");
        $(this).addClass("is-info").removeClass("is-white")
      })
    });
    </script>
    <style>
      #SignalGenerator .type .active{
        background: cornflowerblue;
      }
    </style>
     <div class="modal-card">
      <header class="modal-card-head">
        <p class="modal-card-title">Signal Generator</p>
        <button class="delete" aria-label="close"></button>
      </header>
        <form class="modal-card-body">
          <h1><table style="width: 100%;text-align: center;"><tr><td name="voltage">0 V</td><td name="frequency">0 Hz</td></tr></table></h1>
          <hr/>
          <label for="voltage" class="form-label">Voltage</label>
          <input type="range" class="slider is-fullwidth" min="0" max="100" step="1" name="voltage" value='0'>
          <div class="btn-group" role="group" aria-label="Basic radio toggle button group" style="margin: auto;" name='voltage-multiple'>
            <input type="radio" class="btn-check" name="btnradio-voltage" id="voltage-multiple-btnradio1" autocomplete="off" value='0.001' checked>
            <label class="btn btn-outline-primary" for="voltage-multiple-btnradio1">100mV</label>
          
            <input type="radio" class="btn-check" name="btnradio-voltage" id="voltage-multiple-btnradio2" autocomplete="off" value='0.01'>
            <label class="btn btn-outline-primary" for="voltage-multiple-btnradio2">1V</label>

            <input type="radio" class="btn-check" name="btnradio-voltage" id="voltage-multiple-btnradio3" autocomplete="off" value='0.1'>
            <label class="btn btn-outline-primary" for="voltage-multiple-btnradio3">10V</label>
          </div>
        <hr/>
        <label for="frequency" class="form-label">Frequency</label>
        <input type="range" class="slider is-fullwidth" min="0" max="1000" step="1" id="frequency" name='frequency' value='0'>
        <br>
        <div class="btn-group" role="group" aria-label="Basic radio toggle button group" style="margin: auto;" name='freq-multiple'>
          <input type="radio" class="btn-check" name="btnradio-frequency" id="freq-multiple-btnradio1" autocomplete="off" value='1' checked>
          <label class="btn btn-outline-primary" for="freq-multiple-btnradio1">1kHz</label>
        
          <input type="radio" class="btn-check" name="btnradio-frequency" id="freq-multiple-btnradio2" autocomplete="off" value='10'>
          <label class="btn btn-outline-primary" for="freq-multiple-btnradio2">10kHz</label>
        
          <input type="radio" class="btn-check" name="btnradio-frequency" id="freq-multiple-btnradio3" autocomplete="off" value='100'>
          <label class="btn btn-outline-primary" for="freq-multiple-btnradio3">100kHz</label>

          <input type="radio" class="btn-check" name="btnradio-frequency" id="freq-multiple-btnradio4" autocomplete="off" value='1000'>
          <label class="btn btn-outline-primary" for="freq-multiple-btnradio4">1MHz</label>
        </div>
        <hr/>
          <div class="columns type">
            <div class="column">
              <a class='button is-large is-white' style="border:1px solid #c0c0c0;" name="sine">
                <img src='/images/sineWave.svg'  style="background-size:50px; height: 50px;width:50px;">
              </a>
            </div>
            <div class="column">
              <a class='button is-large is-white' style="border:1px solid #c0c0c0;" name="square">
                <img src='/images/squareWave.svg' style="background-size:50px; height: 50px;width:50px;">
              </a>
            </div>
            <div class="column">
              <a class='button is-large is-white' style="border:1px solid #c0c0c0;" name="triangle">
                <img src='/images/triangleWave.svg' style="background-size:50px; height: 50px;width:50px;">
              </a>
            </div>
            <div class="column">
              <a class='button is-large is-white' style="border:1px solid #c0c0c0;" name="sawtooth">
                <img src='/images/sawtoothWave.svg' style="background-size:50px; height: 50px;width:50px;">
              </a>
            </div>
          </div>
        </form>
        <footer class="modal-card-foot">
          <button class="button is-info">Close</button>
        </footer>
      </div>
  </div>
  <div class="modal" id="Oscilloscope">
    <div class="modal-background"></div>
    <div class="modal-card">
      <header class="modal-card-head">
        <p class="modal-card-title">Oscilloscope</p>
        <button class="delete" aria-label="close"></button>
      </header>
        <section class="modal-card-body">
          <h5 class="title">Simulation Setup</h5>
          <div>
          <h6 class="subtitle">Simulation Line</h6>
            <input type="text" class="input" value="tran 20u 20m" name="simulation-line" value="">
            <br><hr>
            <form name="scope1-transformation">
          <h6 class="subtitle">Scope 1 Transformation</h6>
            <input type="radio" class="btn-check" name="type" value='none'>
            <label class="btn btn-outline-primary" for="freq-multiple-btnradio1">None</label>

            <input type="radio" class="btn-check" name="type" value='log'>
            <label class="btn btn-outline-primary" for="freq-multiple-btnradio1">Log</label>
          
            <input type="radio" class="btn-check" name="type" value='mult'>
            <label class="btn btn-outline-primary" for="freq-multiple-btnradio2">Scale</label>
          
            <input type="radio" class="btn-check" name="type" value='diff'>
            <label class="btn btn-outline-primary" for="freq-multiple-btnradio3">Difference</label><br>
            <label>Factor</label><input type="text" class="input" name="factor" value="1">

            </form>
          <hr>
          <form name="scope2-transformation">
          <h6 class="subtitle">Scope 2 Transformation</h6>
            <input type="radio" class="btn-check" name="type" value='none'>
            <label class="btn btn-outline-primary" for="freq-multiple-btnradio1">None</label>

            <input type="radio" class="btn-check" name="type" value='log'>
            <label class="btn btn-outline-primary" for="freq-multiple-btnradio1">Log</label>
          
            <input type="radio" class="btn-check" name="type" value='mult'>
            <label class="btn btn-outline-primary" for="freq-multiple-btnradio2">Scale</label>
          
            <input type="radio" class="btn-check" name="type" value='diff'>
            <label class="btn btn-outline-primary" for="freq-multiple-btnradio3">Difference</label><br>
            <label>Factor</label><input type="text" class="input" name="factor" value="1">
          </form>
        </section>
        <footer class="modal-card-foot">
          <button class="button is-info">Close</button>
        </footer>
      </div>
  </div>
  <div class="modal" id="WalkThrough">
    <div class="modal-background"></div>
    <div class="modal-card">
      <header class="modal-card-head">
        <p class="modal-card-title">Electronics Lab Interface Interactive Tutorial</p>
        <button class="delete" aria-label="close"></button>
      </header>
      <section class="modal-card-body">
    <table width="100%">
      <tr>
        <td style="vertical-align: middle;text-align: left;padding:10px;"><a href='#' onclick="$(this).parent().next().find('div').hide();console.log($(this).parent().next().data('pageshown'));var currentPage = parseInt($(this).parent().next().attr('data-pageshown'))>1 ? parseInt($(this).parent().next().attr('data-pageshown'))-1 : 1;console.log(currentPage);$(this).parent().next().attr('data-pageshown',currentPage);$(this).parent().next().find('div:nth-child('+currentPage+')').show();"><span class="material-icons">arrow_back</span></a></td>
          <td data-pageshown="1">
          <div data-page="1">
            <h1 class="title">Welcome to UNSW ELI</h1>
            <hr>
            <p style="text-align:left">You can work on your circuit on the UNSW Lab Computer, or from your home computer</p>
            <p style="text-align: left">Your circuit is associated with your current URL. Make sure to "check" your circuit often to save the most recent version</p>
            <hr>
            <p style="text-align: center;">1</p>
          </div>
          <div data-page="2">
            <h2 class="subtitle">Component Values</h2>
            <hr>
            <p style="text-align: left;">You can double click component labels (the text) to change their visual and simulation values</p><br><br>
            <component data-spice-directional="false" data-spice-fungible="" data-spice-name="Ri" data-spice-class="" data-spice-type="Resistor" data-spice-value="1k" style="position: absolute; top:180px; left:220px; background-size: 100px; background-repeat: no-repeat; background-image: url('/images/resistor-physical.svg'); width: 100px; height: 100px; background-position: 50% 50%; z-index: 1;cursor: pointer;" class="rotated-0 ui-draggable ui-draggable-handle" onclick="    if (event.altKey && $(this).attr('disabled') != 'disabled') {
              if ($(this).hasClass('rotated-90')) {
                $(this).removeClass('rotated-90');
                $(this).removeClass('rotated-270');
                $(this).removeClass('rotated-0');
                $(this).addClass('rotated-180');
              }
              else if ($(this).hasClass('rotated-180')) {
                $(this).removeClass('rotated-90');
                $(this).removeClass('rotated-180');
                $(this).removeClass('rotated-0');
                $(this).addClass('rotated-270');
              }
              else if ($(this).hasClass('rotated-270')) {
                $(this).removeClass('rotated-180');
                $(this).removeClass('rotated-270');
                $(this).removeClass('rotated-90');
                $(this).addClass('rotated-0');
              } else if ($(this).hasClass('rotated-0')) {
                $(this).removeClass('rotated-180');
                $(this).removeClass('rotated-270');
                $(this).removeClass('rotated-0');
                $(this).addClass('rotated-90');
              } else {
                $(this).removeClass('rotated-180');
                $(this).removeClass('rotated-270');
                $(this).removeClass('rotated-90');
                $(this).addClass('rotated-0');
              }
            }"><label style="position:relative;left:40px;top:15px;" ondblclick="let newValue = prompt('Enter a Component Value');$(this).parent().attr('data-spice-value',newValue);$(this).text(newValue+'('+$(this).parent().attr('data-spice-name')+')')">1k(Ri)</label><div class="InterPortSpace" style="position:absolute;top:47px;left:30px;height:6px;width:35px;"></div><port name="1" data-bind-position="{'left':-3,'top':0}" data-spice-node="999" data-spice-target-nodes="['6','6','6','6','6','6','6','6']" data-spice-position="1" style="top: 47px; left: 2px; height: 6px; width: 28px; position: absolute; background: red; cursor: crosshair;" class="has-tooltip-arrow has-tooltipl-multiline" data-tooltip="Name:1
      Node:999"></port><port name="2" data-bind-position="{'left':29,'top':0}" data-spice-node="999" data-spice-target-nodes="['5','5','5','5','5','5','5','5']" data-spice-position="2" style="top: 47px; left: 65px; height: 6px; width: 32px; position: absolute; background: red; cursor: crosshair;" class="has-tooltip-arrow has-tooltipl-multiline" data-tooltip="Name:2
      Node:999"></port></component>
            <hr>
            <p style="text-align: center;">2</p>
          </div>
          <div data-page="3">
            <h2 class="subtitle">Power Supply</h2>
            <hr>
            <p style="text-align: left;">You must wire your power supply in order to generate the required voltage </p><br>
            <p style="text-align: left;">You aren't required to configure the output, only do this if you wish to simulate your circuit</p>
            <hr>
            <p style="text-align: center;">3</p>
          </div>
          <div data-page="4">
            <h2 class="subtitle">Signal Generator</h2>
            <hr>
            <p style="text-align: left;">You are required to wire your signal generator to match your circuit design</p><br>
            <p style="text-align: left;">You aren't required to configure the output, only do this if you wish to simulate your circuit</p>
            <hr>
            <p style="text-align: center;">4</p>
          </div>
          <div data-page="5">
            <h2 class="subtitle">Oscilloscope</h2>
            <hr>
            <p style="text-align: left;">You aren't required to wire or configure the oscilloscope unless you would like to simulate your circuit</p><br>
            <p style="text-align: left;">Clicking the "Oscilloscope" button will allow you to change simulation parameters</p>
            <hr>
            <p style="text-align: center;">5</p>
          </div>
          <div data-page="6">
            <h2 class="subtitle">Checking a Circuit</h1>
            <hr>
            <p style="text-align: left;">Press the "Check" button to validate a circuit before attempting to implement it</p>
            <p style="text-align: center;"><span class="material-icons">check_circle</span></p>
            <p style="text-align: left;">You will be provided with a notification like below:</p>
              <div class="notification is-warning is-light"><button class="delete" onclick="$(this).parent().remove()"></button><strong>Warning</strong><p>Node X is not connected properly</p></div>
            </p>
            <hr>
            <p style="text-align: center;">6</p>
          </div>
          <div data-page="7">
            <h2 class="subtitle">Implementing your Circuit on Hardware</h1>
            <hr>
            <p style="text-align: left;">Press the "Implement" button to enact your checked circuit on the PCB</p>
            <p style="text-align: center;"><span class="material-icons">run_circle</span></p>
            <hr>
            <p style="text-align: center;">7</p>
          </div>
          <div data-page="8">
            <h2 class="subtitle">Simulating your Circuit</h1>
              <hr>
              <p style="text-align: left;">Press the "Simulate" button to simulate your circuit, and display the results of the oscilloscope</p>
              <p style="text-align: center;"><span class="material-icons">play_circle</span></p>
              <hr>
              <p style="text-align: center;">8</p>
          </div>
          <div data-page="9">
            <h2 class="subtitle">Creating Wires</h1>
              <hr>
              <p style="text-align: left;">Clicking a wire will allow your to create a new wire that extends the node of that wire</p>
              <p style="text-align: left;">Nodes are assigned a number, you can see the node a wire is on by hovering over it</p>
              <br>
              <wiref id="wire9999" data-candelete="false" data-spice-collapse-node="false" style="display: inline-block; background: rgb(51, 51, 51); height: 6px; width: 60px; cursor: crosshair;" data-spice-node="1" class="has-tooltip-arrow has-tooltipl-multiline" data-tooltip="Node:xxx"></wiref>
              <br>
              <hr>
              <p style="text-align: center;">9</p>
          </div>
          <div data-page="10">
            <h2 class="subtitle">Deleting Wires</h1>
              <hr>
              <p style="text-align: left;">Holding ALT while clicking a wire will delete the wire</p>
              <p style="text-align: left;">You will NOT be able to delete wires that are preprovided to you</p>
              <wiref onclick="console.log(this);if(this.altKey) $(this).remove();" id="wire9999" data-candelete="false" data-spice-collapse-node="false" style="display: inline-block; background: rgb(51, 51, 51); height: 6px; width: 60px; cursor: crosshair;" data-spice-node="1" class="has-tooltip-arrow has-tooltipl-multiline" data-tooltip="Node:xxx"></wiref>
              <hr>
              <p style="text-align: center;">10</p>
          </div>
          <div data-page="11">
            <h2 class="subtitle">Moving Components</h1>
              <hr>
              <p style="text-align: left;">Simply drag components around and place them onto wires you've created</p>
              <p style="text-align: left;"><b>Careful:</b>Ensure that component ports are overlapping the wires that you intend</p>
              <br><br>
              <component data-spice-directional="false" data-spice-fungible="" data-spice-name="Ri" data-spice-class="" data-spice-type="Resistor" data-spice-value="1k" style="position: absolute; top:240px; left:200px; background-size: 100px; background-repeat: no-repeat; background-image: url('/images/resistor-physical.svg'); width: 100px; height: 100px; background-position: 50% 50%; z-index: 1;cursor: pointer;" class="rotated-0 ui-draggable ui-draggable-handle" onclick="    if (event.altKey && $(this).attr('disabled') != 'disabled') {
                if ($(this).hasClass('rotated-90')) {
                  $(this).removeClass('rotated-90');
                  $(this).removeClass('rotated-270');
                  $(this).removeClass('rotated-0');
                  $(this).addClass('rotated-180');
                }
                else if ($(this).hasClass('rotated-180')) {
                  $(this).removeClass('rotated-90');
                  $(this).removeClass('rotated-180');
                  $(this).removeClass('rotated-0');
                  $(this).addClass('rotated-270');
                }
                else if ($(this).hasClass('rotated-270')) {
                  $(this).removeClass('rotated-180');
                  $(this).removeClass('rotated-270');
                  $(this).removeClass('rotated-90');
                  $(this).addClass('rotated-0');
                } else if ($(this).hasClass('rotated-0')) {
                  $(this).removeClass('rotated-180');
                  $(this).removeClass('rotated-270');
                  $(this).removeClass('rotated-0');
                  $(this).addClass('rotated-90');
                } else {
                  $(this).removeClass('rotated-180');
                  $(this).removeClass('rotated-270');
                  $(this).removeClass('rotated-90');
                  $(this).addClass('rotated-0');
                }
              }"><label style="position:relative;left:40px;top:15px;" ondblclick="let newValue = prompt('Enter a Component Value');$(this).parent().attr('data-spice-value',newValue);$(this).text(newValue+'('+$(this).parent().attr('data-spice-name')+')')">1k(Ri)</label><div class="InterPortSpace" style="position:absolute;top:47px;left:30px;height:6px;width:35px;"></div><port name="1" data-bind-position="{'left':-3,'top':0}" data-spice-node="999" data-spice-target-nodes="['6','6','6','6','6','6','6','6']" data-spice-position="1" style="top: 47px; left: 2px; height: 6px; width: 28px; position: absolute; background: red; cursor: crosshair;" class="has-tooltip-arrow has-tooltipl-multiline" data-tooltip="Name:1
        Node:999"></port><port name="2" data-bind-position="{'left':29,'top':0}" data-spice-node="999" data-spice-target-nodes="['5','5','5','5','5','5','5','5']" data-spice-position="2" style="top: 47px; left: 65px; height: 6px; width: 32px; position: absolute; background: red; cursor: crosshair;" class="has-tooltip-arrow has-tooltipl-multiline" data-tooltip="Name:2
        Node:999"></port></component>
                <hr>
              <p style="text-align: center;">11</p>
          </div>
          <div data-page="12">
            <h2 class="subtitle">Rotating Components</h1>
              <hr>
              <p style="text-align: left;">To rotate a component, click the component while holding ALT</p>
              <br><br>
              <component data-spice-directional="false" data-spice-fungible="" data-spice-name="Ri" data-spice-class="" data-spice-type="Resistor" data-spice-value="1k" style="position: absolute; top:200px; left:220px; background-size: 100px; background-repeat: no-repeat; background-image: url('/images/resistor-physical.svg'); width: 100px; height: 100px; background-position: 50% 50%; z-index: 1;cursor: pointer;" class="rotated-0 ui-draggable ui-draggable-handle rotated-90" onclick="    if (event.altKey && $(this).attr('disabled') != 'disabled') {
                if ($(this).hasClass('rotated-90')) {
                  $(this).removeClass('rotated-90');
                  $(this).removeClass('rotated-270');
                  $(this).removeClass('rotated-0');
                  $(this).addClass('rotated-180');
                }
                else if ($(this).hasClass('rotated-180')) {
                  $(this).removeClass('rotated-90');
                  $(this).removeClass('rotated-180');
                  $(this).removeClass('rotated-0');
                  $(this).addClass('rotated-270');
                }
                else if ($(this).hasClass('rotated-270')) {
                  $(this).removeClass('rotated-180');
                  $(this).removeClass('rotated-270');
                  $(this).removeClass('rotated-90');
                  $(this).addClass('rotated-0');
                } else if ($(this).hasClass('rotated-0')) {
                  $(this).removeClass('rotated-180');
                  $(this).removeClass('rotated-270');
                  $(this).removeClass('rotated-0');
                  $(this).addClass('rotated-90');
                } else {
                  $(this).removeClass('rotated-180');
                  $(this).removeClass('rotated-270');
                  $(this).removeClass('rotated-90');
                  $(this).addClass('rotated-0');
                }
              }"><label style="position:relative;left:40px;top:15px;" ondblclick="let newValue = prompt('Enter a Component Value');$(this).parent().attr('data-spice-value',newValue);$(this).text(newValue+'('+$(this).parent().attr('data-spice-name')+')')">1k(Ri)</label><div class="InterPortSpace" style="position:absolute;top:47px;left:30px;height:6px;width:35px;"></div><port name="1" data-bind-position="{'left':-3,'top':0}" data-spice-node="999" data-spice-target-nodes="['6','6','6','6','6','6','6','6']" data-spice-position="1" style="top: 47px; left: 2px; height: 6px; width: 28px; position: absolute; background: red; cursor: crosshair;" class="has-tooltip-arrow has-tooltipl-multiline" data-tooltip="Name:1
        Node:999"></port><port name="2" data-bind-position="{'left':29,'top':0}" data-spice-node="999" data-spice-target-nodes="['5','5','5','5','5','5','5','5']" data-spice-position="2" style="top: 47px; left: 65px; height: 6px; width: 32px; position: absolute; background: red; cursor: crosshair;" class="has-tooltip-arrow has-tooltipl-multiline" data-tooltip="Name:2
        Node:999"></port></component>
              <hr>
              <p style="text-align: center;">12</p>
          </div>
          <div data-page="13">
            <p style="text-align: center;">13</p>
          </div>
          <div data-page="14">
            <h1 class="title">End of Tutorial</h1>
            <p>Click anywhere to exit this screen</p>
            <p style="text-align: center;">14</p>
          </div>
        </td>
        <td style="vertical-align: middle;text-align: right;padding: 10px;"><a href='#' onclick="$(this).parent().prev().find('div').hide();console.log($(this).parent().prev().data('pageshown'));var currentPage = parseInt($(this).parent().prev().attr('data-pageshown'))<14 ? parseInt($(this).parent().prev().attr('data-pageshown'))+1 : 14;console.log(currentPage);$(this).parent().prev().attr('data-pageshown',currentPage);$(this).parent().prev().find('div:nth-child('+currentPage+')').show();"><span class="material-icons">arrow_forward</span></a></td>
      </tr>
    </table>
    </section>
    </div>
    </div>
  </div>
  <div class="modal" id="HoverOver">
    <div class="modal-background"></div>
    <div class="modal-card">
      <header class="modal-card-head">
        <p class="modal-card-title">Action Tooltip</p>
        <button class="delete" aria-label="close"></button>
      </header>
        <section class="modal-card-body">
          
        </section>
        <footer class="modal-card-foot">
          <button class="button is-info">Close</button>
        </footer>
      </div>
  </div>
  <script type="text/javascript">
    $(document).ready(function(){
      $("#Instructions").addClass('is-active');
    })
  </script>
